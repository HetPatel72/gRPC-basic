# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

import hello_world_pb2 as hello__world__pb2


class HelloWorldStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.Greeting = channel.unary_unary(
                '/HelloWorld/Greeting',
                request_serializer=hello__world__pb2.RequestPayload.SerializeToString,
                response_deserializer=hello__world__pb2.ResponsePayload.FromString,
                )


class HelloWorldServicer(object):
    """Missing associated documentation comment in .proto file."""

    def Greeting(self, request, context):
        name = request.name
        responsePayload = hello__world__pb2.ResponsePayload(message=f"Hello {name}. Good Morning")
        return responsePayload


def add_HelloWorldServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'Greeting': grpc.unary_unary_rpc_method_handler(
                    servicer.Greeting,
                    request_deserializer=hello__world__pb2.RequestPayload.FromString,
                    response_serializer=hello__world__pb2.ResponsePayload.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'HelloWorld', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class HelloWorld(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def Greeting(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/HelloWorld/Greeting',
            hello__world__pb2.RequestPayload.SerializeToString,
            hello__world__pb2.ResponsePayload.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
